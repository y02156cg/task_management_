{"ast":null,"code":"var _jsxFileName = \"/Users/chengong/Desktop/Task Management Application/frontend/src/context/AuthContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// src/context/AuthContext.tsx\nimport { createContext, useContext, useState } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(null);\nexport function AuthProvider({\n  children\n}) {\n  _s();\n  const [token, setToken] = useState(localStorage.getItem('token'));\n  const navigate = useNavigate();\n  const api = axios.create({\n    baseURL: process.env.REACT_APP_BACKEND_URL || \"http://localhost:3001\",\n    headers: {\n      Authorization: token ? `Bearer ${token}` : undefined\n    }\n  });\n  const login = async (username, password) => {\n    try {\n      const response = await api.post('/auth/login', {\n        username,\n        password\n      });\n      const token = response.data.token;\n      localStorage.setItem('token', token);\n      setToken(token);\n      navigate('/');\n    } catch (error) {\n      console.error('Login failed:', error);\n      throw error;\n    }\n  };\n  const register = async (username, password) => {\n    try {\n      const response = await api.post('/auth/register', {\n        username,\n        password\n      });\n      const token = response.data.token;\n      localStorage.setItem('token', token);\n      setToken(token);\n      navigate('/');\n    } catch (error) {\n      console.error('Registration failed:', error);\n      throw error;\n    }\n  };\n  const logout = () => {\n    localStorage.removeItem('token');\n    setToken(null);\n    navigate('/login');\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      token,\n      login,\n      register,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n_s(AuthProvider, \"sbs6LSQ4nnySVYerYC886B6QPhU=\", false, function () {\n  return [useNavigate];\n});\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  return useContext(AuthContext);\n};\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["createContext","useContext","useState","axios","useNavigate","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","token","setToken","localStorage","getItem","navigate","api","create","baseURL","process","env","REACT_APP_BACKEND_URL","headers","Authorization","undefined","login","username","password","response","post","data","setItem","error","console","register","logout","removeItem","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","$RefreshReg$"],"sources":["/Users/chengong/Desktop/Task Management Application/frontend/src/context/AuthContext.tsx"],"sourcesContent":["// src/context/AuthContext.tsx\r\nimport { createContext, useContext, useState, ReactNode } from 'react';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\ninterface AuthContextType {\r\n  token: string | null;\r\n  login: (username: string, password: string) => Promise<void>;\r\n  register: (username: string, password: string) => Promise<void>;\r\n  logout: () => void;\r\n}\r\n\r\nconst AuthContext = createContext<AuthContextType>(null!);\r\n\r\nexport function AuthProvider({ children }: { children: ReactNode }) {\r\n  const [token, setToken] = useState(localStorage.getItem('token'));\r\n  const navigate = useNavigate();\r\n\r\n  const api = axios.create({\r\n    baseURL: process.env.REACT_APP_BACKEND_URL || \"http://localhost:3001\",\r\n    headers: {\r\n      Authorization: token ? `Bearer ${token}` : undefined\r\n    }\r\n  });\r\n\r\n  const login = async (username: string, password: string) => {\r\n    try {\r\n      const response = await api.post('/auth/login', { username, password });\r\n      const token = response.data.token;\r\n      localStorage.setItem('token', token);\r\n      setToken(token);\r\n      navigate('/');\r\n    } catch (error) {\r\n      console.error('Login failed:', error);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const register = async (username: string, password: string) => {\r\n    try {\r\n      const response = await api.post('/auth/register', { username, password });\r\n      const token = response.data.token;\r\n      localStorage.setItem('token', token);\r\n      setToken(token);\r\n      navigate('/');\r\n    } catch (error) {\r\n      console.error('Registration failed:', error);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    localStorage.removeItem('token');\r\n    setToken(null);\r\n    navigate('/login');\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ token, login, register, logout }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n}\r\n\r\nexport const useAuth = () => useContext(AuthContext);"],"mappings":";;;AAAA;AACA,SAASA,aAAa,EAAEC,UAAU,EAAEC,QAAQ,QAAmB,OAAO;AACtE,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAS/C,MAAMC,WAAW,gBAAGP,aAAa,CAAkB,IAAK,CAAC;AAEzD,OAAO,SAASQ,YAAYA,CAAC;EAAEC;AAAkC,CAAC,EAAE;EAAAC,EAAA;EAClE,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAACW,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC;EACjE,MAAMC,QAAQ,GAAGX,WAAW,CAAC,CAAC;EAE9B,MAAMY,GAAG,GAAGb,KAAK,CAACc,MAAM,CAAC;IACvBC,OAAO,EAAEC,OAAO,CAACC,GAAG,CAACC,qBAAqB,IAAI,uBAAuB;IACrEC,OAAO,EAAE;MACPC,aAAa,EAAEZ,KAAK,GAAG,UAAUA,KAAK,EAAE,GAAGa;IAC7C;EACF,CAAC,CAAC;EAEF,MAAMC,KAAK,GAAG,MAAAA,CAAOC,QAAgB,EAAEC,QAAgB,KAAK;IAC1D,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMZ,GAAG,CAACa,IAAI,CAAC,aAAa,EAAE;QAAEH,QAAQ;QAAEC;MAAS,CAAC,CAAC;MACtE,MAAMhB,KAAK,GAAGiB,QAAQ,CAACE,IAAI,CAACnB,KAAK;MACjCE,YAAY,CAACkB,OAAO,CAAC,OAAO,EAAEpB,KAAK,CAAC;MACpCC,QAAQ,CAACD,KAAK,CAAC;MACfI,QAAQ,CAAC,GAAG,CAAC;IACf,CAAC,CAAC,OAAOiB,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,eAAe,EAAEA,KAAK,CAAC;MACrC,MAAMA,KAAK;IACb;EACF,CAAC;EAED,MAAME,QAAQ,GAAG,MAAAA,CAAOR,QAAgB,EAAEC,QAAgB,KAAK;IAC7D,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMZ,GAAG,CAACa,IAAI,CAAC,gBAAgB,EAAE;QAAEH,QAAQ;QAAEC;MAAS,CAAC,CAAC;MACzE,MAAMhB,KAAK,GAAGiB,QAAQ,CAACE,IAAI,CAACnB,KAAK;MACjCE,YAAY,CAACkB,OAAO,CAAC,OAAO,EAAEpB,KAAK,CAAC;MACpCC,QAAQ,CAACD,KAAK,CAAC;MACfI,QAAQ,CAAC,GAAG,CAAC;IACf,CAAC,CAAC,OAAOiB,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC5C,MAAMA,KAAK;IACb;EACF,CAAC;EAED,MAAMG,MAAM,GAAGA,CAAA,KAAM;IACnBtB,YAAY,CAACuB,UAAU,CAAC,OAAO,CAAC;IAChCxB,QAAQ,CAAC,IAAI,CAAC;IACdG,QAAQ,CAAC,QAAQ,CAAC;EACpB,CAAC;EAED,oBACET,OAAA,CAACC,WAAW,CAAC8B,QAAQ;IAACC,KAAK,EAAE;MAAE3B,KAAK;MAAEc,KAAK;MAAES,QAAQ;MAAEC;IAAO,CAAE;IAAA1B,QAAA,EAC7DA;EAAQ;IAAA8B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B;AAAChC,EAAA,CAhDeF,YAAY;EAAA,QAETJ,WAAW;AAAA;AAAAuC,EAAA,GAFdnC,YAAY;AAkD5B,OAAO,MAAMoC,OAAO,GAAGA,CAAA;EAAAC,GAAA;EAAA,OAAM5C,UAAU,CAACM,WAAW,CAAC;AAAA;AAACsC,GAAA,CAAxCD,OAAO;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}